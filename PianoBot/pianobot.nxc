#define DEG_PER_KEY 46
#define MOVE_POWER 40

#define HIT_ANGLE 27
#define HIT_POWER 45

#define MIDDLE_C 22

struct Note {
    // The 'value' is different from the typical MIDI range of 1-127 since PianoBot can't hit black keys
    // To find the value: 7 * OCTAVE_NUMBER + NOTE_NUMBER
    // NOTE_NUMBER ranges from 1-7 (inclusive), with 1 being a 'C'
    unsigned int value;
    
    // The duration is specified in milliseconds
    unsigned int duration;
};

// Before playing any song, the robot's "finger" should be lined up with the middle-C
unsigned int currentNote = MIDDLE_C;

void moveToKey (const unsigned int noteVal) {
    int delta = noteVal - currentNote;
    
    RotateMotorPID(OUT_BC, MOVE_POWER, DEG_PER_KEY * delta * -1, 0, 50, 90);

    currentNote = noteVal;
}

task releaseKey() {
    RotateMotorPID(OUT_A, HIT_POWER, -HIT_ANGLE, 40, 40, 0);
}

void hitKey (const unsigned int noteDuration) {
    RotateMotorPID(OUT_A, HIT_POWER, HIT_ANGLE, 40, 40, 0);
    Wait(noteDuration);
    StartTask(releaseKey);
}

Note NoteWithLine (const string line) {
    Note newNote;
    
    string currNum = "";
    int numCount = 0;
    
    for (int n = 0; n < StrLen(line); n++) {
        string v = SubStr(line, n, 1);
        
        if (v != " ") {
            currNum = StrCat(currNum, v);
        }
        else {
            if (numCount == 0) {
                newNote.value = StrToNum(currNum);
            }
            else if (numCount == 1) {
                newNote.duration = StrToNum(currNum);
            }
            
            currNum = "";
            numCount++;
        }
    }
    
    return newNote;
}

// CHANGE THIS TO PLAY A DIFFERENT SONG
const string FILE_TO_RUN = "twinkle.sng";

task main() {   
    unsigned int fSize = 0;
    byte fHandle = 0;
    
    if (OpenFileRead(FILE_TO_RUN, fSize, fHandle) != NO_ERR) {
        StopAllTasks();
    }
    
    string noteString;
    
    while (ReadLnString(fHandle, noteString) == NO_ERR) {
        Note note = NoteWithLine(noteString);
        
        moveToKey(note.value);
        hitKey(note.duration);
    }
    
    CloseFile(fHandle);
    Off(OUT_ABC);
}
